<Prog> ::= <ClassDecl> <FuncDef> 'main' <FuncBody>
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <StatementList> '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <StatementList> '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <StatementList> '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> <StatementList> '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> <StatementList> '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' <StatBlock> ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <StatementList> '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <StatementList> '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> <StatementList> '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> <Statement> <StatementList> '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> <Statement> epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <Expr> ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <ArithExpr> <ExprTail> ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <ArithExpr> epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <Term> <ArithExprTail> epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <Term> epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <Factor> <TermTail> epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <Factor> epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <AParams> ')' <FuncOrVarIdnestTail> epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <AParams> ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <Expr> <AParamsTail> ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <Expr> epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <ArithExpr> <ExprTail> epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <ArithExpr> epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <Term> <ArithExprTail> epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <Term> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <Factor> <TermTail> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <Factor> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' <FuncOrVar> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <Expr> ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <ArithExpr> <ExprTail> ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <ArithExpr> epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <Term> <ArithExprTail> epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <Term> epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <Factor> <TermTail> epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <Factor> epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <AParams> ')' <FuncOrVarIdnestTail> epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <AParams> ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <Expr> <AParamsTail> ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <Expr> epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <ArithExpr> <ExprTail> epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <ArithExpr> epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <Term> <ArithExprTail> epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <Term> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <Factor> <TermTail> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <Factor> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' <FuncOrVar> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Expr> ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <ArithExpr> <ExprTail> ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <ArithExpr> epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Term> <ArithExprTail> epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Term> epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Factor> <TermTail> epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Factor> epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <ExprTail> ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <ArithExpr> ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <ArithExprTail> ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Factor> <TermTail> epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Factor> epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Term> <ArithExprTail> 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Term> epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Factor> <TermTail> epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <Factor> epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' <FuncOrVar> epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' 'id' <FuncOrVarIdnest> epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> <FuncOrAssignStat> ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <Statement> 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <AParams> ')' <FuncOrVarIdnestTail> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <AParams> ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> <AParamsTail> ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> <AParamsTail> ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <Expr> <AParamsTail> ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <Expr> epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <ArithExpr> <ExprTail> epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <ArithExpr> epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <Term> <ArithExprTail> epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <Term> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <Factor> <TermTail> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' <Factor> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <ArithExpr> <ExprTail> ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <ArithExpr> epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Term> <ArithExprTail> epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Term> epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Factor> <TermTail> epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Factor> epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <ArithExpr> <ExprTail> ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <ArithExpr> epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Term> <ArithExprTail> epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Term> epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Factor> <TermTail> epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Factor> epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Sign> <Factor> epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' <Sign> 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <Statement> 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <AParams> ')' <FuncOrVarIdnestTail> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <AParams> ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> <AParamsTail> ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> <AParamsTail> ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Expr> epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <ArithExpr> <ExprTail> epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <ArithExpr> epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Term> <ArithExprTail> epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Term> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Factor> <TermTail> epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' <Factor> epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Expr> ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <ArithExpr> <ExprTail> ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <ArithExpr> epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Term> <ArithExprTail> epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Term> epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Factor> <TermTail> epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' <Factor> epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' <IndiceRep> 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDeclRep> '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <VarDecl> <Type> 'id' <ArraySizeRept> ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <VarDecl> <Type> 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <VarDecl> 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <Type> 'id' <ArraySizeRept> ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> <Type> 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <VarDecl> 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <Type> 'id' <ArraySizeRept> ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' <Type> 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncDef> 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncDef> 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncDef> 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncDef> 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <Function> <FuncDef> 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <Function> epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> <FuncBody> epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <StatementList> '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <StatementList> '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <StatementList> '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <StatementList> '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> <StatementList> '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Expr> ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <ArithExpr> <ExprTail> ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <ArithExpr> epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Term> <ArithExprTail> epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Term> epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Factor> <TermTail> epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Factor> epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <FuncOrAssignStat> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <FuncOrAssignStatIdnest> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignStatTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Expr> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <FuncOrAssignStat> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <FuncOrAssignStat> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDeclRep> '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <VarDeclRep> '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDecl> epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' <ArraySizeRept> ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <Type> '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <Function> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> <FuncBody> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Expr> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <ArithExpr> <ExprTail> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <ArithExpr> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Term> <ArithExprTail> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Term> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Factor> <TermTail> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Factor> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <FuncOrAssignStat> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <FuncOrAssignStatIdnest> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignStatTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Expr> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <FuncOrAssignStat> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDeclRep> '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <VarDeclRep> '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDecl> epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' <ArraySizeRept> ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> <FuncHead> '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <Type> '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' <ClassMethod> '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <Function> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> <FuncBody> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Expr> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <ArithExpr> <ExprTail> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <ArithExpr> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Term> <ArithExprTail> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Term> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Factor> <TermTail> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <Factor> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <FuncOrAssignStat> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> <ArithExprTail> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <FuncOrVar> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <Factor> <TermTail> '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <Factor> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <FuncOrVar> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> 'id' <FuncOrVarIdnest> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <Factor> <TermTail> '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <Factor> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <FuncOrVar> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> 'id' <FuncOrVarIdnest> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' <MethodBodyVar> 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' 'var' '{' <VarDecl> epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' <ArraySizeRept> ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncHead> '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <Type> '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' <ClassMethod> '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> <FuncBody> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Expr> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <ArithExpr> <ExprTail> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <ArithExpr> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Term> <ArithExprTail> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Term> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Factor> <TermTail> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <Factor> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <FuncOrAssignStat> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> <ArithExprTail> epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <FuncOrVar> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <Factor> <TermTail> '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <Factor> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> <FuncOrVar> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> 'id' <FuncOrVarIdnest> epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <MultOp> 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDeclRep> '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' <ArraySizeRept> ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <Type> '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> <FuncBody> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <StatementList> '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' <Expr> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' <ArithExpr> <ExprTail> ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' <ArithExpr> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' <Term> <ArithExprTail> epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' <Term> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' <Factor> <TermTail> epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' <Factor> epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <Type> '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' <ClassDecl> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' <ClassDecl> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' <ClassDecl> 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <FuncDecl> epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <FuncDeclTail> ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <Type> ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <FuncDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <FuncDeclTail> ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <Type> ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <VarDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <Type> 'id' <ArraySizeRept> ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <Type> 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <VarDecl> 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <Type> 'id' <ArraySizeRept> ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <Type> 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <VarDecl> 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <Type> 'id' <ArraySizeRept> ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <Type> 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' <NestedId> '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <FuncDecl> epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <FuncDeclTail> ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <Type> ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <MemberDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> <FuncDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <FuncDeclTail> ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' <Type> ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <FParams> ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' <Type> 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> <Visibility> 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <MemberDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <VarDecl> 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <Type> 'id' <ArraySizeRept> ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> <Type> 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <Visibility> 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <VarDecl> 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <Type> 'id' <ArraySizeRept> ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> <Type> 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' <Visibility> 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' <Inherit> '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' <NestedId> '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> <ClassDeclBody> '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> <MemberDecl> epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> <FuncDecl> epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> 'func' 'id' '(' <FParams> ')' ':' <FuncDeclTail> ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> 'func' 'id' '(' <FParams> ')' ':' <Type> ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> 'func' 'id' '(' <FParams> ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> 'func' 'id' '(' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> 'func' 'id' '(' <Type> 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' <Visibility> 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' <Inherit> '{' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
<Prog> ::= 'class' 'id' epsilon '{' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' 'class' 'id' 'inherits' 'id' epsilon '{' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'private' 'float' 'id' epsilon ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' ';' 'public' 'func' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' ';' epsilon '}' ';' epsilon 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' epsilon 'return' '(' 'intnum' epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'floatnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon epsilon ')' ':' 'float' '{' 'var' '{' 'float' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' epsilon '*' 'id' epsilon epsilon '+' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' 'func' 'id' 'sr' 'id' '(' 'float' 'id' epsilon ',' 'float' 'id' epsilon ',' 'float' 'id' epsilon epsilon ')' ':' 'id' '{' 'var' '{' 'id' 'id' epsilon ';' epsilon '}' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon '.' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'return' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' epsilon 'main' '{' 'var' '{' 'id' 'id' epsilon ';' 'id' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' '(' 'intnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'id' '(' '-' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon ',' 'floatnum' epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'leq' 'intnum' epsilon epsilon ')' '{' 'write' '(' 'id' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' 'write' '(' 'id' '(' 'id' epsilon epsilon epsilon epsilon epsilon ')' epsilon epsilon epsilon epsilon ')' ';' epsilon '}' ';' epsilon '}'
