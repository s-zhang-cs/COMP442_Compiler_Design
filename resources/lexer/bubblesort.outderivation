<Prog> ::= <ClassDecl> <FuncDef> 'main' <FuncBody>
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> <StatementList> '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' <MethodBodyVar> epsilon '}'
<Prog> ::= <ClassDecl> <FuncDef> 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncDef> 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> <FuncDef> 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <Function> epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> <FuncBody> epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <StatementList> '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <StatementList> '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <StatementList> '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <StatementList> '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' <StatBlock> ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <StatementList> '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <StatementList> '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> <StatementList> '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <FuncOrAssignStat> ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <FuncOrAssignStatIdnest> ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignStatTail> ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> <ArithExprTail> epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Expr> ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <ArithExpr> <ExprTail> ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <ArithExpr> epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Term> <ArithExprTail> epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Term> epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Factor> <TermTail> epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <Factor> epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' <FuncOrVar> epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' <IndiceRep> <FuncOrVarIdnestTail> epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' <IndiceRep> epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <Expr> ']' <IndiceRep> epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <Expr> ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <ArithExpr> <ExprTail> ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <ArithExpr> epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <Term> <ArithExprTail> epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <Term> epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <Factor> <TermTail> epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <Factor> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' <FuncOrVar> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <ExprTail> ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <ArithExpr> ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <ArithExprTail> ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Factor> <TermTail> epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Factor> epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <FuncOrVar> epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> 'id' <FuncOrVarIdnest> epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <ArithExpr> 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Term> <ArithExprTail> 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Term> epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Factor> <TermTail> epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <Factor> epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' <FuncOrVar> epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' 'id' <FuncOrVarIdnest> epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> <FuncOrAssignStat> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' <MethodBodyVar> 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <Type> 'id' <ArraySizeRept> ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> <Type> 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <VarDecl> 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' <ArraySizeRept> ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' <Type> 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> <FuncHead> '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' '[' <IntNum> ']' <ArraySizeRept> ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' '[' <IntNum> ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' <Type> 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' <ClassMethod> '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <Function> 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> <FuncBody> 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <StatementList> '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <StatementList> '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <StatementList> '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <StatementList> '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> <StatementList> '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> <Statement> <StatementList> '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> <Statement> epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' <StatBlock> ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <StatementList> '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <StatementList> '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> <StatementList> '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <Statement> epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> <FuncOrAssignStat> ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <FuncOrAssignStatIdnest> ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignStatTail> ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> <ArithExprTail> epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' <Statement> 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' <StatBlock> ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <StatementList> '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> <StatementList> '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> <Statement> <StatementList> '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> <Statement> epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> <FuncOrAssignStat> ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <FuncOrAssignStatIdnest> ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignStatTail> ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> <ArithExprTail> epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Term> epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> <Factor> epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <AddOp> 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' <IndiceRep> 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' <Statement> 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' <StatBlock> 'else' <StatBlock> ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' <StatBlock> 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <StatementList> '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <StatementList> '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> <StatementList> '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> <Statement> <StatementList> '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> <Statement> epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> <FuncOrAssignStat> ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <FuncOrAssignStatIdnest> ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Expr> ']' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Expr> ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <ArithExpr> <ExprTail> ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <ArithExpr> epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Term> <ArithExprTail> epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Term> <AddOp> <Term> <ArithExprTail> epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Term> <AddOp> <Term> epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Term> <AddOp> <Factor> epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Term> <AddOp> 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Term> '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Factor> <TermTail> '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <Factor> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' <FuncOrVar> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' 'id' <FuncOrVarIdnest> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <Statement> 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> <FuncOrAssignStat> ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' <IndiceRep> <FuncOrVarIdnestTail> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' <IndiceRep> epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Expr> ']' <IndiceRep> epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Expr> ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <ArithExpr> <ExprTail> ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <ArithExpr> epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> <ArithExprTail> epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> <AddOp> <Term> <ArithExprTail> epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> <AddOp> <Term> epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> <AddOp> <Factor> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> <AddOp> 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Factor> <TermTail> '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <Factor> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' <FuncOrVar> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' 'id' <FuncOrVarIdnest> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> <AssignOp> 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' <IndiceRep> 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <Expr> ']' <IndiceRep> 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <Expr> ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <ArithExpr> <ExprTail> ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <ArithExpr> epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <Term> <ArithExprTail> epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <Term> epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <Factor> <TermTail> epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <Factor> epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' <FuncOrVar> epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <Statement> 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' <FuncOrAssignStat> ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <FuncOrAssignStatIdnest> ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignStatTail> ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' <IndiceRep> <FuncOrVarIdnestTail> epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' <IndiceRep> epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <Expr> ']' <IndiceRep> epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <Expr> ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <ArithExpr> <ExprTail> ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <ArithExpr> epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> <ArithExprTail> epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <Term> epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <Factor> <TermTail> epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <Factor> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' <FuncOrVar> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> <AssignOp> 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' <IndiceRep> 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Expr> ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <ExprTail> ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> <ArithExpr> ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> <Term> <ArithExprTail> ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> <Term> epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> <Factor> <TermTail> epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> <Factor> epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> <FuncOrVar> epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' <FuncOrVarIdnest> epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' <IndiceRep> <FuncOrVarIdnestTail> epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' <IndiceRep> epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Expr> ']' <IndiceRep> epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Expr> ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <ArithExpr> <ExprTail> ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <ArithExpr> epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Term> <ArithExprTail> epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Term> <AddOp> <Term> <ArithExprTail> epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Term> <AddOp> <Term> epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Term> <AddOp> <Factor> <TermTail> epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Term> <AddOp> <Factor> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Term> <AddOp> 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Term> '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Factor> <TermTail> '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <Factor> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' <FuncOrVar> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' 'id' <FuncOrVarIdnest> epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> <RelOp> 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <ArithExpr> 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Term> <ArithExprTail> 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Term> epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Factor> <TermTail> epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <Factor> epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' <FuncOrVar> epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' <FuncOrVarIdnest> epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' <IndiceRep> <FuncOrVarIdnestTail> epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' <IndiceRep> epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <Expr> ']' <IndiceRep> epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <Expr> ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <ArithExpr> <ExprTail> ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <ArithExpr> epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <Term> <ArithExprTail> epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <Term> epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <Factor> <TermTail> epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <Factor> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' <FuncOrVar> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Expr> ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <ExprTail> ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <ArithExpr> ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <ArithExprTail> ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> <ArithExprTail> ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> <AddOp> <Term> <ArithExprTail> ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> <AddOp> <Term> epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> <AddOp> <Factor> <TermTail> epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> <AddOp> <Factor> epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> <AddOp> 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Factor> <TermTail> '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Factor> epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <FuncOrVar> epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> 'id' <FuncOrVarIdnest> epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Term> '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Factor> <TermTail> '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <Factor> epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> <FuncOrVar> epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> 'id' <FuncOrVarIdnest> epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> <RelOp> 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <ArithExpr> 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Term> <ArithExprTail> 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Term> epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Factor> <TermTail> epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <Factor> epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' <FuncOrVar> epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' 'id' <FuncOrVarIdnest> epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Expr> ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <ExprTail> ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <ArithExpr> ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <ArithExprTail> ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> <ArithExprTail> ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Term> epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Factor> <TermTail> epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> <Factor> epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> <AddOp> 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Term> '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Factor> <TermTail> '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <Factor> epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> <FuncOrVar> epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> 'id' <FuncOrVarIdnest> epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> <RelOp> 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <ArithExpr> 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Term> <ArithExprTail> 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Term> epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Factor> <TermTail> epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <Factor> epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' <FuncOrVar> epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' 'id' <FuncOrVarIdnest> epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <Statement> 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> <FuncOrAssignStat> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' <IndiceRep> 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <Statement> 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> <AssignOp> 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' <IndiceRep> 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <Statement> 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> <AssignOp> 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' <IndiceRep> 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <Statement> 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> <FuncOrAssignStat> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <FuncOrAssignStatIdnest> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <FuncOrAssignStatIdnestVarTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignStatTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Expr> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> <ExprTail> ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <ArithExpr> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> <ArithExprTail> epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Term> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> <TermTail> epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <Factor> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> <FuncOrVar> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' <FuncOrVarIdnest> epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> <AssignOp> 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' <IndiceRep> 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' <MethodBodyVar> 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> <VarDecl> <VarDeclRep> '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> <VarDecl> epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> <Type> 'id' <ArraySizeRept> ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> <Type> 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <VarDecl> 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <Type> 'id' <ArraySizeRept> ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> <Type> 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <VarDecl> 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <Type> 'id' <ArraySizeRept> ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> <Type> 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <VarDecl> 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <Type> 'id' <ArraySizeRept> ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' <Type> 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> <FuncHead> '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> <FParamsTail> ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' <ArraySizeRept> epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' <Type> 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' <ArraySizeRept> ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' '[' <IntNum> ']' <ArraySizeRept> ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' '[' <IntNum> ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' <Type> 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' <ClassMethod> '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= <ClassDecl> 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
<Prog> ::= epsilon 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon '-' 'id' epsilon epsilon '-' 'intnum' epsilon epsilon ')' '{' 'if' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon 'gt' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon ')' 'then' '{' 'id' epsilon 'assign' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon 'assign' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ';' 'id' '[' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ']' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' epsilon '}' 'else' epsilon ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' 'func' 'id' epsilon '(' 'integer' 'id' '[' epsilon ']' epsilon ',' 'integer' 'id' epsilon epsilon ')' ':' 'void' '{' 'var' '{' 'integer' 'id' epsilon ';' 'integer' 'id' epsilon ';' epsilon '}' 'id' epsilon 'assign' 'id' epsilon epsilon epsilon epsilon ';' 'id' epsilon 'assign' 'intnum' epsilon epsilon epsilon ';' 'while' '(' 'id' epsilon epsilon epsilon 'lt' 'id' epsilon epsilon epsilon ')' '{' 'write' '(' 'id' '[' 'id' epsilon epsilon epsilon epsilon ']' epsilon epsilon epsilon epsilon epsilon ')' ';' 'id' epsilon 'assign' 'id' epsilon epsilon '+' 'intnum' epsilon epsilon epsilon ';' epsilon '}' ';' epsilon '}' epsilon 'main' '{' epsilon epsilon '}'
